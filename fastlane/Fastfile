# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.4.0"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."

    carthage(
      use_submodules: true,
      no_build: true
    )
  end

  desc "Generate app icons"
  lane :icons do
    sh "cd .. && export SOURCE_ROOT=`pwd` && ./Authenticator/Resources/GenerateIcons.sh"
  end

  desc "Generate screenshots"
  lane :screenshots do
    # Generate updated screenshots.
    snapshot
  end

  desc "Runs all the tests"
  lane :test do
    scan(scheme: "Authenticator")
  end

  desc "Submit a new beta build to TestFlight"
  lane :beta do
    # Generate updated app icons.
    icons

    # Ensure that the git repo is not dirty.
    ensure_git_status_clean

    # Set a generated build number.
    build_number = set_build_number

    # Build the app with the Release configuration.
    gym(
      scheme: "Authenticator",
      clean: true
    )

    # Upload the new binary to TestFlight.
    pilot

    # Clear the generated build number.
    clear_build_number

    # Add a git tag for this build.
    add_git_tag(
      tag: "build/#{build_number}"
    )
  end

  desc "Deploy a new version to the App Store"
  lane :release do
    # Generate updated icons and screenshots.
    icons
    screenshots

    # Ensure that the git repo is not dirty.
    # This step will fail if the screenshots were not already up-to-date and committed.
    ensure_git_status_clean

    # Set a generated build number.
    build_number = set_build_number

    # Upload the app metadata and binary to iTunes Connect.
    deliver(
      build_number: build_number,
      skip_binary_upload: true,
      overwrite_screenshots: true,
      submit_for_review: true,
      automatic_release: false
    )

    # Clear the generated build number.
    clear_build_number

    # Add a git tag for this release.
    add_git_tag(
      tag: get_version_number
    )

    # After committing and tagging, bump the version number.
    increment_version_number
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end

def set_build_number
  # Generate a build number from the number of git commits.
  build_number = number_of_commits
  increment_build_number(
    build_number: build_number
  )
  return build_number
end

def clear_build_number
  increment_build_number(build_number: 0)
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
